{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Desktop\\\\Apprentissage Python VScode\\\\magiLoc\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { equipmentData as initialData } from './data/equipments';\nimport CSVImporter from './components/CSVImporter';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Clés pour le stockage local\n  const STORAGE_KEY = 'magiloc-equipment-data';\n  const AUTH_KEY = 'magiloc-authenticated';\n  const NOTES_KEY = 'magiloc-notes-seen';\n\n  // États\n  const [showReleaseNotes, setShowReleaseNotes] = useState(() => !localStorage.getItem(NOTES_KEY));\n  const [isAuthenticated, setIsAuthenticated] = useState(() => localStorage.getItem(AUTH_KEY) === 'true');\n  const [password, setPassword] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [equipmentData, setEquipmentData] = useState([]);\n  const [currentPage, setCurrentPage] = useState('dashboard');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedEquipment, setSelectedEquipment] = useState(null);\n  const [showImporter, setShowImporter] = useState(false);\n\n  // Récupération de l'API backend\n  useEffect(() => {\n    const API_URL = process.env.REACT_APP_API_URL;\n    fetch(`${API_URL}/equipments`).then(res => res.json()).then(data => {\n      if (data && data.length > 0) {\n        setEquipmentData(data);\n        localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n      } else {\n        console.log(\"⚠️ Aucune donnée backend, fallback local\");\n        const savedData = localStorage.getItem(STORAGE_KEY);\n        if (savedData) {\n          setEquipmentData(JSON.parse(savedData));\n        } else {\n          setEquipmentData(initialData);\n        }\n      }\n    }).catch(err => {\n      console.error(\"❌ Erreur API :\", err);\n      const savedData = localStorage.getItem(STORAGE_KEY);\n      if (savedData) {\n        setEquipmentData(JSON.parse(savedData));\n      } else {\n        setEquipmentData(initialData);\n      }\n    });\n  }, []);\n\n  // Sauvegarde auto dans localStorage quand equipmentData change\n  useEffect(() => {\n    if (equipmentData.length > 0) {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(equipmentData));\n    }\n  }, [equipmentData]);\n\n  // Authentification\n  const handleLogin = e => {\n    e.preventDefault();\n    if (password === 'MAGILOC25') {\n      localStorage.setItem(AUTH_KEY, 'true');\n      setIsAuthenticated(true);\n      setPasswordError('');\n    } else {\n      setPasswordError('Mot de passe incorrect');\n      setPassword('');\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(AUTH_KEY);\n    setIsAuthenticated(false);\n    setPassword('');\n  };\n\n  // Notes de mise à jour\n  const handleNotesAccepted = () => {\n    localStorage.setItem(NOTES_KEY, 'true');\n    setShowReleaseNotes(false);\n  };\n\n  // Import CSV\n  const handleDataImported = newData => {\n    setEquipmentData(newData);\n    setShowImporter(false);\n    alert(`${newData.length} équipements importés avec succès !`);\n  };\n\n  // Réinitialisation des données\n  const handleResetData = () => {\n    if (window.confirm('Êtes-vous sûr de vouloir réinitialiser toutes les données ?')) {\n      setEquipmentData(initialData);\n      localStorage.removeItem(STORAGE_KEY);\n      alert('Données réinitialisées !');\n    }\n  };\n\n  // Calcul stats\n  const stats = {\n    total: equipmentData.length,\n    enLocation: equipmentData.filter(eq => eq.disponibilite === 'En Location').length,\n    surParc: equipmentData.filter(eq => eq.disponibilite === 'Sur Parc').length,\n    enMaintenance: equipmentData.filter(eq => eq.disponibilite === 'En Maintenance').length,\n    enOffre: equipmentData.filter(eq => eq.disponibilite === 'En Offre de Prix').length\n  };\n\n  // Fonctions utilitaires (getStatusClass, getEtatClass, getFilteredData, etc.)\n  // 👉 garde exactement tes fonctions actuelles, je ne les recopie pas ici pour alléger\n  // mais elles restent identiques (getStatusClass, getEtatClass, getFilteredData, etc.)\n\n  // ---- puis tout ton code UI existant (ReleaseNotes, LoginScreen, Sidebar, Dashboard, ListView, Planning, DetailView...) ----\n  // 👉 tu peux les laisser tels quels, je n’ai pas touché à la partie affichage.\n  // La seule différence est que `equipmentData` est maintenant rempli via ton backend si dispo.\n\n  // Rendu conditionnel\n  if (showReleaseNotes) return /*#__PURE__*/_jsxDEV(ReleaseNotes, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 32\n  }, this);\n  if (!isAuthenticated) return /*#__PURE__*/_jsxDEV(LoginScreen, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 32\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [showImporter && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(CSVImporter, {\n          onDataImported: handleDataImported\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), renderMainContent()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Sn02A5FU2jeCov/LcgEvvHX18YY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","equipmentData","initialData","CSVImporter","jsxDEV","_jsxDEV","App","_s","STORAGE_KEY","AUTH_KEY","NOTES_KEY","showReleaseNotes","setShowReleaseNotes","localStorage","getItem","isAuthenticated","setIsAuthenticated","password","setPassword","passwordError","setPasswordError","setEquipmentData","currentPage","setCurrentPage","searchTerm","setSearchTerm","selectedEquipment","setSelectedEquipment","showImporter","setShowImporter","API_URL","process","env","REACT_APP_API_URL","fetch","then","res","json","data","length","setItem","JSON","stringify","console","log","savedData","parse","catch","err","error","handleLogin","e","preventDefault","handleLogout","removeItem","handleNotesAccepted","handleDataImported","newData","alert","handleResetData","window","confirm","stats","total","enLocation","filter","eq","disponibilite","surParc","enMaintenance","enOffre","ReleaseNotes","fileName","_jsxFileName","lineNumber","columnNumber","LoginScreen","className","children","Sidebar","style","marginBottom","onDataImported","renderMainContent","_c","$RefreshReg$"],"sources":["C:/Users/kevin/Desktop/Apprentissage Python VScode/magiLoc/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { equipmentData as initialData } from './data/equipments';\r\nimport CSVImporter from './components/CSVImporter';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  // Clés pour le stockage local\r\n  const STORAGE_KEY = 'magiloc-equipment-data';\r\n  const AUTH_KEY = 'magiloc-authenticated';\r\n  const NOTES_KEY = 'magiloc-notes-seen';\r\n\r\n  // États\r\n  const [showReleaseNotes, setShowReleaseNotes] = useState(() => !localStorage.getItem(NOTES_KEY));\r\n  const [isAuthenticated, setIsAuthenticated] = useState(() => localStorage.getItem(AUTH_KEY) === 'true');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [equipmentData, setEquipmentData] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState('dashboard');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedEquipment, setSelectedEquipment] = useState(null);\r\n  const [showImporter, setShowImporter] = useState(false);\r\n\r\n  // Récupération de l'API backend\r\n  useEffect(() => {\r\n    const API_URL = process.env.REACT_APP_API_URL;\r\n\r\n    fetch(`${API_URL}/equipments`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data && data.length > 0) {\r\n          setEquipmentData(data);\r\n          localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\r\n        } else {\r\n          console.log(\"⚠️ Aucune donnée backend, fallback local\");\r\n          const savedData = localStorage.getItem(STORAGE_KEY);\r\n          if (savedData) {\r\n            setEquipmentData(JSON.parse(savedData));\r\n          } else {\r\n            setEquipmentData(initialData);\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"❌ Erreur API :\", err);\r\n        const savedData = localStorage.getItem(STORAGE_KEY);\r\n        if (savedData) {\r\n          setEquipmentData(JSON.parse(savedData));\r\n        } else {\r\n          setEquipmentData(initialData);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  // Sauvegarde auto dans localStorage quand equipmentData change\r\n  useEffect(() => {\r\n    if (equipmentData.length > 0) {\r\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(equipmentData));\r\n    }\r\n  }, [equipmentData]);\r\n\r\n  // Authentification\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    if (password === 'MAGILOC25') {\r\n      localStorage.setItem(AUTH_KEY, 'true');\r\n      setIsAuthenticated(true);\r\n      setPasswordError('');\r\n    } else {\r\n      setPasswordError('Mot de passe incorrect');\r\n      setPassword('');\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(AUTH_KEY);\r\n    setIsAuthenticated(false);\r\n    setPassword('');\r\n  };\r\n\r\n  // Notes de mise à jour\r\n  const handleNotesAccepted = () => {\r\n    localStorage.setItem(NOTES_KEY, 'true');\r\n    setShowReleaseNotes(false);\r\n  };\r\n\r\n  // Import CSV\r\n  const handleDataImported = (newData) => {\r\n    setEquipmentData(newData);\r\n    setShowImporter(false);\r\n    alert(`${newData.length} équipements importés avec succès !`);\r\n  };\r\n\r\n  // Réinitialisation des données\r\n  const handleResetData = () => {\r\n    if (window.confirm('Êtes-vous sûr de vouloir réinitialiser toutes les données ?')) {\r\n      setEquipmentData(initialData);\r\n      localStorage.removeItem(STORAGE_KEY);\r\n      alert('Données réinitialisées !');\r\n    }\r\n  };\r\n\r\n  // Calcul stats\r\n  const stats = {\r\n    total: equipmentData.length,\r\n    enLocation: equipmentData.filter(eq => eq.disponibilite === 'En Location').length,\r\n    surParc: equipmentData.filter(eq => eq.disponibilite === 'Sur Parc').length,\r\n    enMaintenance: equipmentData.filter(eq => eq.disponibilite === 'En Maintenance').length,\r\n    enOffre: equipmentData.filter(eq => eq.disponibilite === 'En Offre de Prix').length\r\n  };\r\n\r\n  // Fonctions utilitaires (getStatusClass, getEtatClass, getFilteredData, etc.)\r\n  // 👉 garde exactement tes fonctions actuelles, je ne les recopie pas ici pour alléger\r\n  // mais elles restent identiques (getStatusClass, getEtatClass, getFilteredData, etc.)\r\n\r\n  // ---- puis tout ton code UI existant (ReleaseNotes, LoginScreen, Sidebar, Dashboard, ListView, Planning, DetailView...) ----\r\n  // 👉 tu peux les laisser tels quels, je n’ai pas touché à la partie affichage.\r\n  // La seule différence est que `equipmentData` est maintenant rempli via ton backend si dispo.\r\n\r\n  // Rendu conditionnel\r\n  if (showReleaseNotes) return <ReleaseNotes />;\r\n  if (!isAuthenticated) return <LoginScreen />;\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Sidebar />\r\n      <div className=\"main-content\">\r\n        {showImporter && (\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <CSVImporter onDataImported={handleDataImported} />\r\n          </div>\r\n        )}\r\n        {renderMainContent()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}